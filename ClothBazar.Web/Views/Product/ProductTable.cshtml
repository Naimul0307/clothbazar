@model ProductSearchViewModels
@{
    ViewBag.Title = "ProductTable";
}

<div class="form-control">
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Search</label>
                    <input class="form-control" name="search" id="searchTxt" value="@Model.SearchTerm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-4">
                            <button class="form-control btn btn-danger" type="button" id="searchBtn">Search</button>
                        </div>
                        <div class="col-md-4">
                            <button class="form-control btn btn-danger" type="button" id="resetBtn">Reset</button>
                        </div>
                        <div class="col-md-4">
                            <button class="form-control btn btn-danger" type="button" id="newBtn">New</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div class="form-control">
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th class="font-weight-bold">Product Name</th>
                <th class="font-weight-bold">Category</th>
                <th class="font-weight-bold"> Price</th>
                <th class="font-weight-bold wrap-td">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Products != null && Model.Products.Count > 0)
            {
                foreach (var product in Model.Products)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>
                            @if (product.Category != null)
                            {
                                <text>@product.Category.Name</text>
                            }
                            else
                            {
                                <text>-</text>
                            }
                        </td>
                        <td>@product.Price</td>
                        <td class="wrap-td">
                            <button class="editBtn" data-id="@product.Id"> Edit </button>
                            <button class="deleteBtn" data-id="@product.Id">Delete</button>
                            <button class="addtocart" data-id="@product.Id">Add To Cart</button>
                        </td>
                    </tr>
                }

            }
            else
            {
                <tr>
                    <td class="text-danger" colspan="4">No Products Found.</td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        @if(Model.PageNo != 1)
       
        {
            <button class="pageButtons" data-pageNo="@(Model.PageNo-1)">Previous</button>
        }
        <button class="pageButtons" data-pageNo="@(Model.PageNo+1)">Next</button>
    </div>

</div>

<script>
    $(".pageButtons").click(function () {
        $.ajax({
            url: "@Url.Action("ProductTable", "Product")",//"/Product/ProductTable",
            data: {
                pageNo: $(this).attr("data-pageNo")
            }
        })
            .done(function (resposen) {
                $("#tableContiner").html(resposen);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });
    });
</script>

<script>
    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();

        $.ajax({
            type: "Get",
            url: "@Url.Action("ProductTable", "Product")",//"/Product/ProductTable",
            data: {
                search: searchValue
            }
        })
            .done(function (resposen) {
                $("#tableContiner").html(resposen);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });
    });
</script>

<script>
    $("#resetBtn").click(function () {
        var searchValue = "";

        $.ajax({
            type: "Get",
            url: "@Url.Action("ProductTable", "Product")",//"/Product/ProductTable",
            data: {
                search: searchValue
            }
        })
            .done(function (resposen) {
                $("#tableContiner").html(resposen);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });
    });
</script>

<script>
    $("#newBtn").click(function () {
        $.ajax({
            type: "Get",
            url: "@Url.Action("Create", "Product")",//"/Product/Create",
        })
            .done(function (resposen) {
                $("#actionContainer").html(resposen);

                focusAction("actionContainer");
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });
    });
</script>

<script>
    $(".editBtn").click(function () {
        $.ajax({
            type: "Get",
            url: "@Url.Action("Edit", "Product")",//"/Product/Edit",
            data: {
                Id: $(this).attr("data-id")
            }

        })
            .done(function (resposen) {
                $("#actionContainer").html(resposen);
                focusAction("actionContainer");
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });
    });

    $(".deleteBtn").click(function () {

        swal({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to recover this imaginary file!",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {

                    $.ajax({
                        type: "Post",
                        url: "@Url.Action("Delete", "Product")",//"/Product/Delete",
                        data: {
                            Id: $(this).attr("data-id")
                        }
                    })
                        .done(function (resposen) {
                            $("#tableContiner").html(resposen);

                            swal("Record Delete Successfully!", {
                                icon: "success",
                            });
                        })
                        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Fail");
                        });
                }

            });
        //var confirmDelete = confirm("Are Want Delete This Product?")
        //if (confirmDelete)
        //{
        //    $.ajax({
        //        type: "Post",
        //        url: "/Product/Delete",
        //        data: {
        //            Id: $(this).attr("data-id")
        //        }
        //    })
        //        .done(function (resposen) {
        //            $("#tableContiner").html(resposen);
        //        })
        //        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        //            alert("Fail");
        //        });
        //}

    });

    var products = [];
    $(".addtocart").click(function () {
        var productId = $(this).attr("data-id");
        products.push(productId);
        $.cookie("CartProducts", products.join("-"), { path: "/" });
        alert("Product added to cart");
    });

</script>